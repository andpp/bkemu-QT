#include "res.h"

CResourceStrings::CResourceStrings()
{
    InitResourceStrings();
}

void CResourceStrings::InitResourceStrings()
{
    m_Resources.clear();

    m_Resources[IDS_ALTPRO_CODE] = QObject::tr( "Код стр.");
    m_Resources[IDS_ALTPRO_MODE] = QObject::tr( "Режим");
    m_Resources[IDS_BK_ERROR_BLKBASEMEM11] = QObject::tr( "Base memory 11");
    m_Resources[IDS_BK_ERROR_BLKBASEMEM] = QObject::tr( "Base memory");
    m_Resources[IDS_BK_ERROR_BLKCONFIG] = QObject::tr( "Config");
    m_Resources[IDS_BK_ERROR_BLKCPUREGS] = QObject::tr( "CPU registers");
    m_Resources[IDS_BK_ERROR_BLKEXT16MEM] = QObject::tr( "Ext.16kb memory");
    m_Resources[IDS_BK_ERROR_BLKEXT32MEM] = QObject::tr( "Ext.32kb memory");
    m_Resources[IDS_BK_ERROR_BLKFRAMEDATA] = QObject::tr( "Frame Data");
    m_Resources[IDS_BK_ERROR_BLKMEMMAPMGR] = QObject::tr( "Memory map manager");
    m_Resources[IDS_BK_ERROR_BLKNOTFOUND] = QObject::tr( "Не найден блок '%s'.");
    m_Resources[IDS_BK_ERROR_BLKPREVIEW] = QObject::tr( "Preview");
    m_Resources[IDS_BK_ERROR_BLKSMK512MEM] = QObject::tr( "SMK512 memory");
    m_Resources[IDS_BK_ERROR_BLKSYSREGS] = QObject::tr( "System registers");
    m_Resources[IDS_BK_ERROR_BLKTAPE] = QObject::tr( "Tape");
    m_Resources[IDS_BK_ERROR_DTABLKRDERR] = QObject::tr( "Ошибка чтения данных блока '%s'.");
    m_Resources[IDS_BK_ERROR_DTABLKWRERR] = QObject::tr( "Ошибка записи данных блока '%s'.");
    m_Resources[IDS_BK_ERROR_HDRBLKRDERR] = QObject::tr( "Ошибка чтения заголовка блока '%s'.");
    m_Resources[IDS_BK_ERROR_HDRBLKWRERR] = QObject::tr( "Ошибка записи заголовка блока '%s'.");
    m_Resources[IDS_BK_ERROR_MFBKBOARDERROR] = QObject::tr( "Ошибка создания текущей конфигурации БК.");
    m_Resources[IDS_BK_ERROR_MFDBGTOOLBARERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKDEBUGVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKINGBARERROR] = QObject::tr( "Не удалось создать закрепляемые окна.");
    m_Resources[IDS_BK_ERROR_MFDOCKMEMDUMPVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKOSCVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKREGDUMPVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKTAPECTRLVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFDOCKVKBDVIEWERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFMENUBARERROR] = QObject::tr( "Не удалось создать строку меню.");
    m_Resources[IDS_BK_ERROR_MFPARSECMDLNERROR] = QObject::tr( "Ошибка разбора командной строки.");
    m_Resources[IDS_BK_ERROR_MFSNDTOOLBARERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFSTATUSBARERROR] = QObject::tr( "Не удалось создать строку состояния.");
    m_Resources[IDS_BK_ERROR_MFSTDTOOLBARERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MFVCAPTOOLBARERROR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MSFCORRUPTMSF] = QObject::tr( "Структура MSF файла повреждена.");
    m_Resources[IDS_BK_ERROR_MSFNOMSFFILE] = QObject::tr( "Это не MSF файл.");
    m_Resources[IDS_BK_ERROR_MSFOPENFILEERROR] = QObject::tr( "Ошибка открытия файла.");
    m_Resources[IDS_BK_ERROR_MSFPREVIEWBLK_DIB] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MSFPREVIEWBLK_OBJ] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_MSFREADHEADERRROR] = QObject::tr( "Ошибка чтения заголовка MSF файла.");
    m_Resources[IDS_BK_ERROR_MSFSEEKERROR] = QObject::tr( "Ошибка позиционирования в файле.");
    m_Resources[IDS_BK_ERROR_MSFWRITEHEADERRROR] = QObject::tr( "Ошибка записи заголовка MSF файла.");
    m_Resources[IDS_BK_ERROR_NOCBKOSCSCRCREATE] = QObject::tr( "Не удалось создать объект 'Осциллограф'.");
    m_Resources[IDS_BK_ERROR_NOCBKOSCSCRINIT] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_NOCDISASMDLGINIT] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_NOCMEMDUMPDLGINIT] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_NOCREATEVKBD] = QObject::tr( "Окно CBKKbdButn не захотело создаваться.");
    m_Resources[IDS_BK_ERROR_NOCREGDUMPDLGINIT] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_NOCSCREENCREATE] = QObject::tr( "Не удалось создать объект 'Экран'.");
    m_Resources[IDS_BK_ERROR_NOCSCREENINIT] = QObject::tr( "Не удалось инициализировать объект 'Экран'.");
    m_Resources[IDS_BK_ERROR_NOCTAPECTRLDLGINIT] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_NOERRORS] = QObject::tr( "Успешно.");
    m_Resources[IDS_BK_ERROR_NOTENMEMR] = QObject::tr( "Недостаточно памяти.");
    m_Resources[IDS_BK_ERROR_SCRCOLORTABLEERR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_SCRDLLFUNCERR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_SCRDLLFUNCPTRERR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_SCRDLLINITERR] = QObject::tr( "");
    m_Resources[IDS_BK_ERROR_SCRLLNOTLOAD] = QObject::tr( "Не найдена DLL библиотека ");
    m_Resources[IDS_BK_ERROR_WRONGFILE] = QObject::tr( "Не тот файл подсовываете. Повторим?");
    m_Resources[IDS_BUTTON_ADAPTIVEBWMODE_STR] = QObject::tr( "");
    m_Resources[IDS_BUTTON_COLORMODE_STR] = QObject::tr( "Режим отображения цветной / чёрно-белый");
    m_Resources[IDS_BUTTON_LOAD_STR] = QObject::tr( "Загрузить битмап (BMP, проч.) в эту страницу");
    m_Resources[IDS_BUTTON_SAVE_STR] = QObject::tr( "Сохранить страницу в битмап (BMP, проч.)");
    m_Resources[IDS_BUTTON_SPRITE_STR] = QObject::tr( "Открыть отдельно окно просмотра страницы");
    m_Resources[IDS_CANT_OPEN_FILE_S] = QObject::tr( "Невозможно открыть файл ""%s"" !\nОстановить CPU ? ");
    m_Resources[IDS_COMMAND_PROMPT_INFO] = QObject::tr( "\nКоманды:\n - /h или /? - эта справка.\n - /b имя_файла.bin - загрузка bin файла в конфигурацию БК-0010-01.\n - /m имя_файла.msf - загрузка msf файла.\n - /t имя_файла{.tap|.wav} - загрузка tape или wave файла.\n - /s скрипт - запуск файла скрипта.");
    m_Resources[IDS_CONFAY_AY38910] = QObject::tr( "AY-3-8910");
    m_Resources[IDS_CONFAY_YM2149F] = QObject::tr( "YM2149F");
    m_Resources[IDS_CONFNAME_BK_0010_01_A16M] = QObject::tr( "БК0010-01 + контроллер A16M");
    m_Resources[IDS_CONFNAME_BK_0010_01_EXT32RAM] = QObject::tr( "БК0010-01 + доп. 32кб ОЗУ");
    m_Resources[IDS_CONFNAME_BK_0010_01_FDD] = QObject::tr( "БК0010-01 + стандартный КНГМД");
    m_Resources[IDS_CONFNAME_BK_0010_01_MSTD] = QObject::tr( "БК0010-01 + блок Фокал-МСТД");
    m_Resources[IDS_CONFNAME_BK_0010_01_SAMARA] = QObject::tr( "БК0010-01 + контроллер Samara");
    m_Resources[IDS_CONFNAME_BK_0010_01_SMK512] = QObject::tr( "БК0010-01 + контроллер SMK512");
    m_Resources[IDS_CONFNAME_BK_0010_01] = QObject::tr( "БК0010-01");
    m_Resources[IDS_CONFNAME_BK_0011_A16M] = QObject::tr( "БК0011 + контроллер A16M");
    m_Resources[IDS_CONFNAME_BK_0011_FDD] = QObject::tr( "БК0011 + стандартный КНГМД");
    m_Resources[IDS_CONFNAME_BK_0011M_A16M] = QObject::tr( "БК0011М + контроллер A16M");
    m_Resources[IDS_CONFNAME_BK_0011M_FDD] = QObject::tr( "БК0011М + стандартный КНГМД");
    m_Resources[IDS_CONFNAME_BK_0011M_SAMARA] = QObject::tr( "БК0011М + контроллер Samara");
    m_Resources[IDS_CONFNAME_BK_0011M_SMK512] = QObject::tr( "БК0011М + контроллер SMK512");
    m_Resources[IDS_CONFNAME_BK_0011M] = QObject::tr( "БК0011М + МСТД");
    m_Resources[IDS_CONFNAME_BK_0011_SAMARA] = QObject::tr( "БК0011 + контроллер Samara");
    m_Resources[IDS_CONFNAME_BK_0011_SMK512] = QObject::tr( "БК0011 + контроллер SMK512");
    m_Resources[IDS_CONFNAME_BK_0011] = QObject::tr( "БК0011 + МСТД");
    m_Resources[IDS_DDRAW_NEEDED] = QObject::tr( "Необходим DirectX 9.0 или выше!");
    m_Resources[IDS_DEBUG_ADDRESS] = QObject::tr( "Адрес");
    m_Resources[IDS_DEBUG_ARGUMENTS] = QObject::tr( "Аргументы");
    m_Resources[IDS_DEBUG_COMMAND] = QObject::tr( "Команда");
    m_Resources[IDS_DEBUG_COMMENTS] = QObject::tr( "Машинный код");
    m_Resources[IDS_DEBUG_MARK] = QObject::tr( " ");
    m_Resources[IDS_DEBUG_WND] = QObject::tr( "Окно отладки");
    m_Resources[IDS_DISK_FORMAT_ALTPRO] = QObject::tr( "HDD AltPro");
    m_Resources[IDS_DISK_FORMAT_ANDOS] = QObject::tr( "ANDOS");
    m_Resources[IDS_DISK_FORMAT_AODOS] = QObject::tr( "AODOS");
    m_Resources[IDS_DISK_FORMAT_CSIDOS] = QObject::tr( "CSIDOS3");
    m_Resources[IDS_DISK_FORMAT_DIR] = QObject::tr( "Директория.");
    m_Resources[IDS_DISK_FORMAT_DXDOS] = QObject::tr( "DX-DOS");
    m_Resources[IDS_DISK_FORMAT_ERROR] = QObject::tr( "Ошибка чтения");
    m_Resources[IDS_DISK_FORMAT_MICRODOS] = QObject::tr( "MicroDOS");
    m_Resources[IDS_DISK_FORMAT_MKDOS] = QObject::tr( "MKDOS");
    m_Resources[IDS_DISK_FORMAT_MSDOS] = QObject::tr( "MS-DOS");
    m_Resources[IDS_DISK_FORMAT_NCDOS] = QObject::tr( "HC-DOS");
    m_Resources[IDS_DISK_FORMAT_NORD] = QObject::tr( "NORD");
    m_Resources[IDS_DISK_FORMAT_RT11] = QObject::tr( "RT-11");
    m_Resources[IDS_DISK_FORMAT_SAMARA] = QObject::tr( "HDD Samara");
    m_Resources[IDS_DISK_FORMAT_UNKNOWN] = QObject::tr( "Неизвестный формат");
    m_Resources[IDS_DISK_NOACCESS] = QObject::tr( "Нет доступа.");
    m_Resources[IDS_DISK_SYSTEM] = QObject::tr( "Системный");
    m_Resources[IDS_EDIT_MENU] = QObject::tr( "Редактировать");
    m_Resources[IDS_EMUL_TITLE] = QObject::tr( "Эмулятор БК для Windows");
    m_Resources[IDS_ERRMSF_OLD] = QObject::tr( "MSF старых версий, к сожалению, не поддерживается.");
    m_Resources[IDS_ERRMSF_WRONG] = QObject::tr( "Не поддерживаемый или повреждённый формат MSF файла.");
    m_Resources[IDS_ERRMSG_INTERNAL] = QObject::tr( "Возможно, внутренняя ошибка эмулятора. Эмулятор остановлен. ");
    m_Resources[IDS_ERRMSG_NOTROM] = QObject::tr( "Внимание, отсутствует ROM модуль ");
    m_Resources[IDS_ERRMSG_ROM_NOT_DEFINED] = QObject::tr( "Внимание, не задан ROM модуль для ");
    m_Resources[IDS_ERRMSG_ROM] = QObject::tr( "Исключительная ситуация по адресу: %06o.\nНеверная инструкция по адресу: %06o.\nВозможная причина: ""%s"".\n""Прервать"" - отладка.\n""Повтор"" - продолжить выполнение. \n""Пропустить"" - больше не показывать это сообщение.");
    m_Resources[IDS_ERROR_CANTOPENFILE] = QObject::tr( "Невозможно открыть файл.");
    m_Resources[IDS_EXPLORER] = QObject::tr( "Проводник");
    m_Resources[IDS_FILEEXT_BINARY] = QObject::tr( ".bin");
    m_Resources[IDS_FILEEXT_MEMORYSTATE] = QObject::tr( ".msf");
    m_Resources[IDS_FILEEXT_ROM] = QObject::tr( ".rom");
    m_Resources[IDS_FILEEXT_SCRIPT] = QObject::tr( ".bkscript");
    m_Resources[IDS_FILEEXT_TAPE] = QObject::tr( ".tap");
    m_Resources[IDS_FILEEXT_WAVE] = QObject::tr( ".wav");
    m_Resources[IDS_FILEFILTER_BIN] = QObject::tr( "Бинарный файл эмулятора (*.bin *.BIN);; Все файлы (*.*)");
    m_Resources[IDS_FILEFILTER_BKHDDIMG] = QObject::tr( "Образ жёсткого диска БК (*.hdi);; Все файлы (*.*)");
    m_Resources[IDS_FILEFILTER_BKIMG] = QObject::tr( "Образ диска БК (*.img *.bkd *.dsk);; Все файлы (*.*)|");
    m_Resources[IDS_FILEFILTER_IMGLOAD] = QObject::tr( "Все файлы изображений");
    m_Resources[IDS_FILEFILTER_MSF] = QObject::tr( "Файл состояния памяти (*.msf);; Все файлы (*.*)");
    m_Resources[IDS_FILEFILTER_TAPE_LOAD] = QObject::tr("");
    m_Resources[IDS_FILEFILTER_TAPE_SAVE] = QObject::tr("");
    m_Resources[IDS_FILEFILTER_TAP_ONLY] = QObject::tr( "Файл кассеты БК (*.tap);; Все файлы (*.*)");
    m_Resources[IDS_FILEFILTER_WAV] = QObject::tr( "Microsoft Wave (*.wav);; Все файлы (*.*)");
    m_Resources[IDS_INI_ADDR_DISASM] = QObject::tr( "Start disasm address");
    m_Resources[IDS_INI_ADDR_DUMP] = QObject::tr( "Start dump address");
    m_Resources[IDS_INI_ASK_FOR_BREAK] = QObject::tr( "Show dialog on access violation");
    m_Resources[IDS_INI_AUTO_BEG_TAPE] = QObject::tr( "Tape auto start detection");
    m_Resources[IDS_INI_AUTO_END_TAPE] = QObject::tr( "Tape auto end detection");
    m_Resources[IDS_INI_AY1PANAL] = QObject::tr( "AY Channel A Pan Left");
    m_Resources[IDS_INI_AY1PANBL] = QObject::tr( "AY Channel B Pan Left");
    m_Resources[IDS_INI_AY1PANCL] = QObject::tr( "AY Channel C Pan Left");
    m_Resources[IDS_INI_AY1VOLA] = QObject::tr( "AY Channel A Volume");
    m_Resources[IDS_INI_AY1VOLB] = QObject::tr( "AY Channel B Volume");
    m_Resources[IDS_INI_AY1VOLC] = QObject::tr( "AY Channel C Volume");
    m_Resources[IDS_INI_AY8910] = QObject::tr( "AY8910 enabled");
    m_Resources[IDS_INI_AY8910_DCOFFSET] = QObject::tr( "AY8910 DC Offset correct");
    m_Resources[IDS_INI_AY8910_FILTER] = QObject::tr( "AY8910 filter enabled");
    m_Resources[IDS_INI_BIGBUTTONS] = QObject::tr( "Big buttons for Instrumental Panel");
    m_Resources[IDS_INI_BK10_OPT_MSTD] = QObject::tr( "BK10 Optional MSTD");
    m_Resources[IDS_INI_BK10_RE2_017_MONITOR] = QObject::tr( "BK10 Monitor");
    m_Resources[IDS_INI_BK10_RE2_018_FOCAL] = QObject::tr( "BK10 Focal");
    m_Resources[IDS_INI_BK10_RE2_019_MSTD] = QObject::tr( "BK10 MSTD");
    m_Resources[IDS_INI_BK10_RE2_106_BASIC1] = QObject::tr( "BK10 Basic1");
    m_Resources[IDS_INI_BK10_RE2_107_BASIC2] = QObject::tr( "BK10 Basic2");
    m_Resources[IDS_INI_BK10_RE2_108_BASIC3] = QObject::tr( "BK10 Basic3");
    m_Resources[IDS_INI_BK11M_RE2_324_BOS] = QObject::tr( "BK11M Monitor BOS");
    m_Resources[IDS_INI_BK11M_RE2_325_EXT] = QObject::tr( "BK11M Monitor EXT");
    m_Resources[IDS_INI_BK11M_RE2_327_BASIC1] = QObject::tr( "BK11M Basic1");
    m_Resources[IDS_INI_BK11M_RE2_328_BASIC2] = QObject::tr( "BK11M Basic2");
    m_Resources[IDS_INI_BK11M_RE2_329_BASIC3] = QObject::tr( "BK11M Basic3");
    m_Resources[IDS_INI_BK11M_RE2_330_MSTD] = QObject::tr( "BK11M MSTD");
    m_Resources[IDS_INI_BK11_RE2_198_BASIC1] = QObject::tr( "BK11 Basic1");
    m_Resources[IDS_INI_BK11_RE2_199_BASIC2] = QObject::tr( "BK11 Basic2");
    m_Resources[IDS_INI_BK11_RE2_200_BASIC3] = QObject::tr( "BK11 Basic3");
    m_Resources[IDS_INI_BK11_RE2_201_BOS] = QObject::tr( "BK11 Monitor BOS");
    m_Resources[IDS_INI_BK11_RE2_202_EXT] = QObject::tr( "BK11 Monitor EXT");
    m_Resources[IDS_INI_BK11_RE2_203_MSTD] = QObject::tr( "BK11 MSTD");
    m_Resources[IDS_INI_BK11_RE_OPT_PG12_1] = QObject::tr( "BK11 Optional Page12.1");
    m_Resources[IDS_INI_BK11_RE_OPT_PG12_2] = QObject::tr( "BK11 Optional Page12.2");
    m_Resources[IDS_INI_BK11_RE_OPT_PG13_1] = QObject::tr( "BK11 Optional Page13.1");
    m_Resources[IDS_INI_BK11_RE_OPT_PG13_2] = QObject::tr( "BK11 Optional Page13.2");
    m_Resources[IDS_INI_BKJOY_A] = QObject::tr( "Joystick A Button");
    m_Resources[IDS_INI_BKJOY_ALTFIRE] = QObject::tr( "Joystick AltFire");
    m_Resources[IDS_INI_BKJOY_B] = QObject::tr( "Joystick B Button");
    m_Resources[IDS_INI_BKJOY_DOWN] = QObject::tr( "Joystick Down");
    m_Resources[IDS_INI_BKJOY_FIRE] = QObject::tr( "Joystick Fire");
    m_Resources[IDS_INI_BKJOY_LEFT] = QObject::tr( "Joystick Left");
    m_Resources[IDS_INI_BKJOY_RIGHT] = QObject::tr( "Joystick Right");
    m_Resources[IDS_INI_BKJOY_UP] = QObject::tr( "Joystick Up");
    m_Resources[IDS_INI_BKKEYBOARD] = QObject::tr( "Emulate BK keyboard");
    m_Resources[IDS_INI_BKMODEL] = QObject::tr( "BK model");
    m_Resources[IDS_INI_BLACK_WHITE] = QObject::tr( "Adapt black & white mode");
    m_Resources[IDS_INI_COLOR_MODE] = QObject::tr( "Run in color mode");
    m_Resources[IDS_INI_COVOX] = QObject::tr( "Covox enabled");
    m_Resources[IDS_INI_COVOX_DCOFFSET] = QObject::tr( "Covox DC Offset correct");
    m_Resources[IDS_INI_COVOX_FILTER] = QObject::tr( "Covox filter enabled");
    m_Resources[IDS_INI_COVOX_STEREO] = QObject::tr( "Stereo covox");
    m_Resources[IDS_INI_CPU_FREQUENCY] = QObject::tr( "CPU frequency");
    m_Resources[IDS_INI_CPU_RUN_ADDR] = QObject::tr( "CPU start address");
    m_Resources[IDS_INI_DRIVEA] = QObject::tr( "Drive A:");
    m_Resources[IDS_INI_DRIVEB] = QObject::tr( "Drive B:");
    m_Resources[IDS_INI_DRIVEC] = QObject::tr( "Drive C:");
    m_Resources[IDS_INI_DRIVED] = QObject::tr( "Drive D:");
    m_Resources[IDS_INI_EMULATE_FDDIO] = QObject::tr( "Emulate FDD IO");
    m_Resources[IDS_INI_EMUL_LOAD_TAPE] = QObject::tr( "Emulate load tape operations");
    m_Resources[IDS_INI_EMUL_SAVE_TAPE] = QObject::tr( "Emulate save tape operations");
    m_Resources[IDS_INI_EXCLUSIVEOPENIMAGES] = QObject::tr( "Exclusive Open Image Files");
    m_Resources[IDS_INI_FDR253] = QObject::tr( "FDD KNGMD253");
    m_Resources[IDS_INI_FDR_A16M] = QObject::tr( "FDD A16M");
    m_Resources[IDS_INI_FDR] = QObject::tr( "FDD KNGMD");
    m_Resources[IDS_INI_FDR_SAMARA] = QObject::tr( "FDD Samara");
    m_Resources[IDS_INI_FDR_SMK512] = QObject::tr( "FDD SMK512");
    m_Resources[IDS_INI_FFMPEGCMDLINE] = QObject::tr( "FFMPEG Cmd Line");
    m_Resources[IDS_INI_FILENAME] = QObject::tr( "bk.ini");
    m_Resources[IDS_INI_FULL_SCREEN] = QObject::tr( "Run in fullscreen mode");
    m_Resources[IDS_INI_HDD0] = QObject::tr( "HDD0");
    m_Resources[IDS_INI_HDD1] = QObject::tr( "HDD1");
    m_Resources[IDS_INI_ICLBLOCK] = QObject::tr( "IC Load Block");
    m_Resources[IDS_INI_IMG_DIRECTORY] = QObject::tr( "IMG directory");
    m_Resources[IDS_INI_JOYSTICK] = QObject::tr( "Joystick enabled");
    m_Resources[IDS_INI_LONGBIN] = QObject::tr( "Use long Bin format");
    m_Resources[IDS_INI_LUMINOFOREMODE] = QObject::tr( "Screen fade emulation");
    m_Resources[IDS_INI_MEM_DIRECTORY] = QObject::tr( "Memory directory");
    m_Resources[IDS_INI_MENESTREL_DCOFFSET] = QObject::tr( "Menestrel DC Offset correct");
    m_Resources[IDS_INI_MENESTREL_FILTER] = QObject::tr( "Menestrel filter enabled");
    m_Resources[IDS_INI_MENESTREL] = QObject::tr( "Menestrel enabled");
    m_Resources[IDS_INI_MOUSEM] = QObject::tr( "Emulate Mouse");
    m_Resources[IDS_INI_ORIG_SCRNSHOT_SIZE] = QObject::tr( "Origin screenshot size");
    m_Resources[IDS_INI_OSCRENDER_TYPE] = QObject::tr( "Oscilloscope render type");
    m_Resources[IDS_INI_PALADAPTBW] = QObject::tr( "Adapt BW Palette");
    m_Resources[IDS_INI_PALBW] = QObject::tr( "BW Palette");
    m_Resources[IDS_INI_PALCOL00] = QObject::tr( "Color Palette 00");
    m_Resources[IDS_INI_PALCOL01] = QObject::tr( "Color Palette 01");
    m_Resources[IDS_INI_PALCOL02] = QObject::tr( "Color Palette 02");
    m_Resources[IDS_INI_PALCOL03] = QObject::tr( "Color Palette 03");
    m_Resources[IDS_INI_PALCOL04] = QObject::tr( "Color Palette 04");
    m_Resources[IDS_INI_PALCOL05] = QObject::tr( "Color Palette 05");
    m_Resources[IDS_INI_PALCOL06] = QObject::tr( "Color Palette 06");
    m_Resources[IDS_INI_PALCOL07] = QObject::tr( "Color Palette 07");
    m_Resources[IDS_INI_PALCOL08] = QObject::tr( "Color Palette 08");
    m_Resources[IDS_INI_PALCOL09] = QObject::tr( "Color Palette 09");
    m_Resources[IDS_INI_PALCOL10] = QObject::tr( "Color Palette 10");
    m_Resources[IDS_INI_PALCOL11] = QObject::tr( "Color Palette 11");
    m_Resources[IDS_INI_PALCOL12] = QObject::tr( "Color Palette 12");
    m_Resources[IDS_INI_PALCOL13] = QObject::tr( "Color Palette 13");
    m_Resources[IDS_INI_PALCOL14] = QObject::tr( "Color Palette 14");
    m_Resources[IDS_INI_PALCOL15] = QObject::tr( "Color Palette 15");
    m_Resources[IDS_INI_PAUSE_CPU] = QObject::tr( "Pause CPU after emulator start");
    m_Resources[IDS_INI_PROGRAM_DIRECTORY] = QObject::tr( "Program directory");
    m_Resources[IDS_INI_REGSDUMP_INTERVAL] = QObject::tr( "Registers dump interval");
    m_Resources[IDS_INI_ROM_DIRECTORY] = QObject::tr( "Rom directory");
    m_Resources[IDS_INI_SAVES_DEFAULT] = QObject::tr( "Use Saves directory as default");
    m_Resources[IDS_INI_SAVES_DIRECTORY] = QObject::tr( "User Saves directory");
    m_Resources[IDS_INI_SCRIPTS_DIRECTORY] = QObject::tr( "Scripts directory");
    m_Resources[IDS_INI_SCRRENDER_TYPE] = QObject::tr( "Screen render type");
    m_Resources[IDS_INI_SECTIONNAME_DIRECTORIES] = QObject::tr( "Directories");
    m_Resources[IDS_INI_SECTIONNAME_DRIVES] = QObject::tr( "Drives");
    m_Resources[IDS_INI_SECTIONNAME_JOYSTICK] = QObject::tr( "Joystick Parameters");
    m_Resources[IDS_INI_SECTIONNAME_MAIN] = QObject::tr( "Main");
    m_Resources[IDS_INI_SECTIONNAME_OPTIONS] = QObject::tr( "Options");
    m_Resources[IDS_INI_SECTIONNAME_PALETTES] = QObject::tr( "Palettes");
    m_Resources[IDS_INI_SECTIONNAME_PARAMETERS] = QObject::tr( "Parameters");
    m_Resources[IDS_INI_SECTIONNAME_ROMMODULES] = QObject::tr( "Rom modules");
    m_Resources[IDS_INI_SHOW_PERFORMANCE_STRING] = QObject::tr( "Show performance string");
    m_Resources[IDS_INI_SMOOTHING] = QObject::tr( "Smoothing Screen");
    m_Resources[IDS_INI_SOUNDCHIPFREQ] = QObject::tr( "SoundChip Frequency");
    m_Resources[IDS_INI_SOUNDCHIPMODEL] = QObject::tr( "SoundChip Model");
    m_Resources[IDS_INI_SOUND_SAMPLE_RATE] = QObject::tr( "Sound Sample Rate");
    m_Resources[IDS_INI_SOUNDVOLUME] = QObject::tr( "Sound volume");
    m_Resources[IDS_INI_SPEAKER_DCOFFSET] = QObject::tr( "Speaker DC Offset correct");
    m_Resources[IDS_INI_SPEAKER_FILTER] = QObject::tr( "Speaker filter enabled");
    m_Resources[IDS_INI_SPEAKER] = QObject::tr( "Speaker enabled");
    m_Resources[IDS_INI_SSHOT_DIRECTORY] = QObject::tr( "Screenshots directory");
    m_Resources[IDS_INI_SSHOT_NUM] = QObject::tr( "Screenshot number");
    m_Resources[IDS_INI_TAPES_DIRECTORY] = QObject::tr( "Tapes directory");
    m_Resources[IDS_INI_TOOLS_DIRECTORY] = QObject::tr( "Tools directory");
    m_Resources[IDS_INI_VKBD_TYPE] = QObject::tr( "Virtual Keyboard Type");
    m_Resources[IDS_JOYEDIT_PRESSKEY] = QObject::tr( "press key...");
    m_Resources[IDS_JOYEDIT_UNKNOWN] = QObject::tr( "unknown");
    m_Resources[IDS_LOADTAPE_ERRORVALUE] = QObject::tr( "Ошибка");
    m_Resources[IDS_LOADTAPE_TYPE_BIN] = QObject::tr( "BINARY");
    m_Resources[IDS_LOADTAPE_TYPE_MSF] = QObject::tr( "MSF TAPE");
    m_Resources[IDS_LOADTAPE_TYPE_UNKNOWN] = QObject::tr( "UNKNOWN");
    m_Resources[IDS_LOADTAPE_TYPE_WAVE] = QObject::tr( "WAVE");
    m_Resources[IDS_MEMDUMP_BYTE] = QObject::tr( "BYTE");
    m_Resources[IDS_MEMDUMP_WND] = QObject::tr( "Дамп памяти");
    m_Resources[IDS_MEMDUMP_WORD] = QObject::tr( "WORD");
    m_Resources[IDS_MEMORY_177130IN] = QObject::tr( "177130|Чт");
    m_Resources[IDS_MEMORY_177130OUT] = QObject::tr( "177130|Зп");
    m_Resources[IDS_MEMORY_177132IN] = QObject::tr( "177132|Чт");
    m_Resources[IDS_MEMORY_177132OUT] = QObject::tr( "177132|Зп");
    m_Resources[IDS_MEMORY_177660] = QObject::tr( "177660");
    m_Resources[IDS_MEMORY_177662IN] = QObject::tr( "177662|Чт");
    m_Resources[IDS_MEMORY_177662OUT] = QObject::tr( "177662|Зп");
    m_Resources[IDS_MEMORY_177664] = QObject::tr( "177664");
    m_Resources[IDS_MEMORY_177700] = QObject::tr( "177700");
    m_Resources[IDS_MEMORY_177702] = QObject::tr( "177702");
    m_Resources[IDS_MEMORY_177704] = QObject::tr( "177704");
    m_Resources[IDS_MEMORY_177706] = QObject::tr( "177706");
    m_Resources[IDS_MEMORY_177710] = QObject::tr( "177710");
    m_Resources[IDS_MEMORY_177712] = QObject::tr( "177712");
    m_Resources[IDS_MEMORY_177714IN] = QObject::tr( "177714|Чт");
    m_Resources[IDS_MEMORY_177714OUT] = QObject::tr( "177714|Зп");
    m_Resources[IDS_MEMORY_177716IN] = QObject::tr( "177716|Чт");
    m_Resources[IDS_MEMORY_177716OUT_MEM] = QObject::tr( "177716|ЗпП");
    m_Resources[IDS_MEMORY_177716OUT_TAP] = QObject::tr( "177716|ЗпЗ");
    m_Resources[IDS_MEMORY_PC] = QObject::tr( "PC");
    m_Resources[IDS_MEMORY_PSW] = QObject::tr( "PSW");
    m_Resources[IDS_MEMORY_R0] = QObject::tr( "R0");
    m_Resources[IDS_MEMORY_R1] = QObject::tr( "R1");
    m_Resources[IDS_MEMORY_R2] = QObject::tr( "R2");
    m_Resources[IDS_MEMORY_R3] = QObject::tr( "R3");
    m_Resources[IDS_MEMORY_R4] = QObject::tr( "R4");
    m_Resources[IDS_MEMORY_R5] = QObject::tr( "R5");
    m_Resources[IDS_MEMORY_SP] = QObject::tr( "SP");
    m_Resources[IDS_MENU_DEBUG_BREAK] = QObject::tr( "Стоп");
    m_Resources[IDS_MENU_DEBUG_CONTINUE] = QObject::tr( "Продолжить");
    m_Resources[IDS_MSGBOX_CAPTION] = QObject::tr( "BKEmu сообщает");
    m_Resources[IDS_MSGBOX_ERRMSG] = QObject::tr( "Неверный ID сообщения: %d.");
    m_Resources[IDS_OSCILLATOR_WND] = QObject::tr( "Осциллограф");
    m_Resources[IDS_OUTPUT_WND] = QObject::tr( "Консоль");
    m_Resources[IDS_PALETTE_BWPRESET0] = QObject::tr( "Градации Серого");
    m_Resources[IDS_PALETTE_BWPRESET1] = QObject::tr( "Россыпь Зелёного");
    m_Resources[IDS_PALETTE_BWPRESET2] = QObject::tr( "Искры Синего");
    m_Resources[IDS_PALETTE_BWPRESET3] = QObject::tr( "Оттенки Янтаря");
    m_Resources[IDS_PALETTE_MORE] = QObject::tr( "Ещё...");
    m_Resources[IDS_PRINT_PAGES] = QObject::tr( "Page %3i of %3i ");
    m_Resources[IDS_PRINT_TITLE] = QObject::tr( "Electronica BK");
    m_Resources[IDS_REGDUMPCPU_DEC] = QObject::tr( "DEC");
    m_Resources[IDS_REGDUMPCPU_HEX] = QObject::tr( "HEX");
    m_Resources[IDS_REGDUMP_CPU_WND] = QObject::tr( "Дамп регистров CPU");
    m_Resources[IDS_REGDUMP_FDD_WND] = QObject::tr( "Дамп регистров FDD");
    m_Resources[IDS_RENDER_D2D] = QObject::tr( "Direct2D");
    m_Resources[IDS_RENDER_D3D] = QObject::tr( "Direct3D");
    m_Resources[IDS_RENDER_DIB] = QObject::tr( "VFW");
    m_Resources[IDS_RENDER_GDI] = QObject::tr( "GDI+");
    m_Resources[IDS_RENDER_OGL] = QObject::tr( "OpenGL");
    m_Resources[IDS_SCREENVIEW_WND] = QObject::tr( "Экран");
    m_Resources[IDS_SETT_KBDVIEW0] = QObject::tr( "Кнопочная");
    m_Resources[IDS_SETT_KBDVIEW1] = QObject::tr( "Плёночная");
    m_Resources[IDS_SETT_TABTITLE0] = QObject::tr( " Приводы и параметры");
    m_Resources[IDS_SETT_TABTITLE1] = QObject::tr( " Интерфейс эмулятора ");
    m_Resources[IDS_SETT_TABTITLE2] = QObject::tr( " Текущие опции");
    m_Resources[IDS_SNDCHPFRQ_1500000] = QObject::tr( "1500000 (12МГц/8)");
    m_Resources[IDS_SNDCHPFRQ_1714286] = QObject::tr( "1714286 (12МГц/7)");
    m_Resources[IDS_SNDCHPFRQ_1774400] = QObject::tr( "1774400 (ZX)");
    m_Resources[IDS_SNDCHPFRQ_1789772] = QObject::tr( "1789772 (12МГц/6.7)");
    m_Resources[IDS_STATUS_PANE1] = QObject::tr( "Панель 1");
    m_Resources[IDS_STATUS_PANE2] = QObject::tr( "Панель 2");
    m_Resources[IDS_TAPECTRL_WND] = QObject::tr( "Управление чтением / записью лент");
    m_Resources[IDS_TAPEMANAGER_BROWSESELECT] = QObject::tr( "Выберите папку для копирования...");
    m_Resources[IDS_TAPEMNGR_ADDR] = QObject::tr( "Адрес");
    m_Resources[IDS_TAPEMNGR_BADCRC_SAVE] = QObject::tr( "");
    m_Resources[IDS_TAPEMNGR_CAPTURE_ERROR] = QObject::tr( "");
    m_Resources[IDS_TAPEMNGR_CRC] = QObject::tr( "CRC");
    m_Resources[IDS_TAPEMNGR_CRC_ERROR] = QObject::tr( "Ошибка контрольной суммы в файле %s.");
    m_Resources[IDS_TAPEMNGR_CRC_FAIL] = QObject::tr( "err");
    m_Resources[IDS_TAPEMNGR_CRC_OK] = QObject::tr( "ок");
    m_Resources[IDS_TAPEMNGR_END_OF_FILE] = QObject::tr( "\tОбнаружен конец файла");
    m_Resources[IDS_TAPEMNGR_INPUT_DEVS] = QObject::tr( "Устройство ввода по умолчанию");
    m_Resources[IDS_TAPEMNGR_LENGTH] = QObject::tr( "Длина");
    m_Resources[IDS_TAPEMNGR_NAME_FORMAT] = QObject::tr( "%s : адрес = %o, длина = %o");
    m_Resources[IDS_TAPEMNGR_NAME] = QObject::tr( "Имя");
    m_Resources[IDS_TAPEMNGR_NO_INPUTDEVS] = QObject::tr( "Устройства ввода отсутствуют.");
    m_Resources[IDS_TAPEMNGR_PATH] = QObject::tr( "Путь файла");
    m_Resources[IDS_TAPEMNGR_SAVE_AS] = QObject::tr( "Сохранить как...");
    m_Resources[IDS_TAPEMNGR_SAVE_ERROR] = QObject::tr( "\t'%s' - ошибка. Невозможно записать файл.");
    m_Resources[IDS_TAPEMNGR_SAVE_MESSAGE] = QObject::tr( "Сохранить выделение:");
    m_Resources[IDS_TAPEMNGR_SAVE_SUCCEED] = QObject::tr( "\t'%s' - успешно.");
    m_Resources[IDS_TAPEMNGR_TIME] = QObject::tr( "Время");
    m_Resources[IDS_TAPEMNGR_TYPE] = QObject::tr( "Тип");
    m_Resources[IDS_TAPEMNGR_UNKNOWN] = QObject::tr( "неизвестно");
    m_Resources[IDS_TAPEMNGR_WAVELENGTH] = QObject::tr( "Длина Wave");
    m_Resources[IDS_TOOLBAR_CUSTOMIZE] = QObject::tr( "Настройка...");
    m_Resources[IDS_TOOLBAR_DEBUG] = QObject::tr( "Отладка");
    m_Resources[IDS_TOOLBAR_SOUND] = QObject::tr( "Звук");
    m_Resources[IDS_TOOLBAR_STANDARD] = QObject::tr( "Стандартная");
    m_Resources[IDS_TOOLBAR_VCAPT] = QObject::tr( "Захват видео");
    m_Resources[IDS_VKBD_WND] = QObject::tr( "Виртуальная клавиатура");
    m_Resources[IDS_INI_SYSBREAK_MASK] = QObject::tr( "Sys Break Mask");
    m_Resources[IDS_INI_USE_NATIVE_DIALOGS] = QObject::tr( "Native File Dialogs");
    m_Resources[IDS_INI_LANGUAGE] = "Language";
}
